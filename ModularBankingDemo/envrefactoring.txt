Project: Environment Variable and Configuration Refactoring

1.  **Objective**: Consolidate all environment variables into a single `.env` file at the root of the `ModularBankingDemo` directory, remove hardcoded API endpoints, and update the backend and frontend applications to use this new centralized configuration.

2.  **Scope**: This refactoring is strictly limited to the `/Users/gpanagiotopoulos/ModularDemo/ModularBankingDemo` directory. No other files or directories will be modified.

3.  **Detailed Steps**:

    a.  **Create a Consolidated `.env` File**:
        i.  Search for all `.env` files within the `ModularBankingDemo` directory.
        ii. Read the contents of each discovered `.env` file.
        iii. Create a new, single `.env` file at `/Users/gpanagiotopoulos/ModularDemo/ModularBankingDemo/.env`.
        iv. Merge the contents from all old `.env` files into the new one, ensuring there are no duplicate or conflicting variables.

    b.  **Centralize API Endpoint Configuration**:
        i.  Read the file at `/Users/gpanagiotopoulos/ModularDemo/ModularBankingDemo/demoflow-backend/src/config/temenosConfig.js`.
        ii. Identify all hardcoded Temenos API endpoint URLs.
        iii. For each URL, create a descriptive environment variable (e.g., `TEMENOS_PARTY_API_URL`) and add it to the new root `.env` file.

    c.  **Refactor Backend Application**:
        i.  Modify the main entry point of the `demoflow-backend` application (likely `src/server.js` or similar) to load the new root `.env` file using `dotenv`.
        ii. Update `/Users/gpanagiotopoulos/ModularDemo/ModularBankingDemo/demoflow-backend/src/config/temenosConfig.js` to use `process.env` to read the API endpoints instead of hardcoded strings.
        iii. Systematically review other backend files (excluding tests for now) to ensure they correctly reference the new centralized configuration.

    d.  **Refactor Frontend Application**:
        i.  Analyze the `modular-banking-frontend` to determine how it receives configuration from the backend.
        ii. Ensure that the backend correctly provides all necessary configuration values (like API URLs) to the frontend after the refactoring. The frontend code itself will not be changed, but its source of configuration might be.

    e.  **Testing and Validation**:
        i.  Execute the full test suite for the `demoflow-backend`.
        ii. If any tests fail specifically due to the `.env` changes, update the test setup to correctly load the new root `.env` file.
        iii. No other changes will be made to the tests.

    f.  **Cleanup**:
        i.  Once the refactoring is complete and all tests are passing, delete the old, now-redundant `.env` files. 